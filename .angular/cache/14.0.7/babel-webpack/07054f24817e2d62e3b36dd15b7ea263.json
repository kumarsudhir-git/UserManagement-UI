{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.apiUrl = 'https://localhost:7028/api/status';\n      this.loginUrl = 'https://localhost:7028/api/login';\n    }\n\n    login(username, password) {\n      return this.http.post(this.loginUrl, {\n        username,\n        password\n      });\n    }\n\n    getToken() {\n      return localStorage.getItem('jwt_token');\n    }\n\n    getOrderDetails(orderId) {\n      debugger; // This line is for debugging purposes, you can remove it in production\n\n      const token = this.getToken();\n      const headers = token ? new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      }) : undefined;\n      return this.http.get(`${this.apiUrl}/${orderId}`, {\n        headers\n      }).pipe(catchError(error => {\n        if (error.status === 401) {\n          localStorage.removeItem('jwt_token');\n          this.router.navigate(['/']);\n        }\n\n        return throwError(() => error);\n      }));\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}